Uppgift 1: Skapa och använd en enkel Enum
Beskrivning:
Skapa en enum som representerar olika Vädertyper (Weather) med värdena SUNNY, RAINY, CLOUDY, och SNOWY.
Använd den i ett huvudprogram där du skriver ut vädertypen för dagen.

Krav:

Skapa en enum kallad Weather med de fyra vädertyperna.
Skapa en variabel av typen Weather och tilldela den ett värde.
Skriv ut vädertypen med System.out.println().
Exempelutdata:

Today's weather is: SUNNY


Uppgift 2: Använd en Enum i en Switch-sats
Beskrivning:
Använd en enum för att representera Svårighetsnivåer (Level) i ett spel. Använd switch-satsen för att skriva ut ett
specifikt meddelande beroende på vilken svårighetsnivå som valts: LOW, MEDIUM, eller HIGH.

Krav:

Skapa en enum kallad Level med värdena LOW, MEDIUM, och HIGH.
Använd en switch-sats för att skriva ut olika meddelanden beroende på nivån.
Testa programmet med olika värden av Level.
Exempelutdata:


You have selected: Medium level


Uppgift 3: Loopa igenom en Enum
Beskrivning:
Skapa en enum för olika typer av Drycker (Drink), till exempel COFFEE, TEA, WATER, och JUICE.
Loopa sedan igenom alla värden i enum och skriv ut dem.

Krav:

Skapa en enum kallad Drink med fyra dryckstyper.
Använd values()-metoden för att loopa genom alla värden i en for-loop.
Skriv ut varje dryck.
Exempelutdata:

yaml
Kopiera kod
Available drinks:
COFFEE
TEA
WATER
JUICE


Uppgift 4: Enum med metoder och attribut
Beskrivning:
Skapa en enum som representerar olika Färger (Color) och lägg till en metod för att hämta RGB-värdena för varje färg.
Varje färg ska ha tre attribut: r, g, och b (för röda, gröna och blå komponenter).

Krav:

Skapa en enum kallad Color med värden som RED, GREEN, och BLUE.
Lägg till tre attribut för varje färg: r, g, och b.
Skapa en metod som returnerar RGB-värdena som en sträng.
Skriv ut RGB-värdena för varje färg.
Exempelutdata:


The RGB value of RED is (255, 0, 0)


Uppgift 5: Enum som implementerar ett Interface
Beskrivning:
Skapa ett interface Describable med en metod getDescription(). Skapa en enum som implementerar detta interface,
där varje enum-värde har en beskrivning. Använd enumen för att representera olika Dagar i veckan (DaysOfWeek).

Krav:

Skapa ett interface Describable med en metod getDescription().
Skapa en enum som implementerar Describable och representerar veckodagarna.
Ge varje veckodag en unik beskrivning.
Skriv ut beskrivningen för varje dag i veckan.
Exempelutdata:


Monday: Start of the work week.
Tuesday: Second day of the work week.
